name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Lint with flake8
      run: |
        flake8 src api tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src api tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: black --check src api tests
    
    - name: Type check with mypy
      run: mypy src api --ignore-missing-imports
      continue-on-error: true
    
    - name: Run tests
      run: pytest tests/ -v --cov=src --cov=api --cov-report=xml --cov-report=html
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Configure Docker for GCP Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build and push Docker image to Artifact Registry
      run: |
        IMAGE="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/churn-prediction-api/churn-api:latest"
        docker build -t $IMAGE .
        docker push $IMAGE
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: churn-prediction-api
        image: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/churn-prediction-api/churn-api:latest
        credentials: ${{ secrets.GCP_CREDENTIALS }}
        region: us-central1
        allow-unauthenticated: true
        memory: 2Gi
        cpu: 2
        max-instances: 10
        timeout: 300

    - name: Notify deployment status
      run: |
        echo "âœ… Deployment to Cloud Run completed successfully"
